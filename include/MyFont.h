#include <pgmspace.h>

// Part1. 点阵数据
// PROGMEM 定义使数据存储在单片机的ROM中
const unsigned char CH_tian PROGMEM[] = 
{
    0x00,0x00,0x3F,0xF8,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0xFF,0xFE,0x01,0x00,
0x02,0x80,0x02,0x80,0x04,0x40,0x04,0x40,0x08,0x20,0x10,0x10,0x20,0x08,0xC0,0x06,/*"天",0*/
};
const unsigned char CH_qi PROGMEM[] = 
{
    0x10,0x00,0x10,0x00,0x3F,0xFC,0x20,0x00,0x4F,0xF0,0x80,0x00,0x3F,0xF0,0x00,0x10,
0x00,0x10,0x00,0x10,0x00,0x10,0x00,0x10,0x00,0x0A,0x00,0x0A,0x00,0x06,0x00,0x02,/*"气",1*/
};
const unsigned char CH_zhou PROGMEM[] = 
{
    0x00,0x00,0x3F,0xF8,0x21,0x08,0x21,0x08,0x2F,0xE8,0x21,0x08,0x21,0x08,0x3F,0xF8,
0x20,0x08,0x27,0xC8,0x24,0x48,0x24,0x48,0x27,0xC8,0x40,0x08,0x40,0x28,0x80,0x10,/*"周",0*/
};
const unsigned char CH_yi PROGMEM[] = 
{
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFE,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*"一",1*/
};
const unsigned char CH_er PROGMEM[] = 
{
    0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,/*"二",2*/
};
const unsigned char CH_san PROGMEM[] = 
{
    0x00,0x00,0x00,0x00,0x7F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF8,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFE,0x00,0x00,0x00,0x00,/*"三",3*/
};
const unsigned char CH_si PROGMEM[] = 
{
    0x00,0x00,0x00,0x00,0x7F,0xFC,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,
0x48,0x44,0x48,0x3C,0x50,0x04,0x60,0x04,0x40,0x04,0x7F,0xFC,0x40,0x04,0x00,0x00,/*"四",4*/
};
const unsigned char CH_wu PROGMEM[] = 
{
    0x00,0x00,0x7F,0xFC,0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x3F,0xF0,0x04,0x10,
0x04,0x10,0x04,0x10,0x04,0x10,0x08,0x10,0x08,0x10,0x08,0x10,0xFF,0xFE,0x00,0x00,/*"五",5*/
};
const unsigned char CH_liu PROGMEM[] = 
{
    0x02,0x00,0x01,0x00,0x00,0x80,0x00,0x80,0x00,0x00,0xFF,0xFE,0x00,0x00,0x00,0x00,
0x04,0x40,0x04,0x20,0x08,0x10,0x08,0x08,0x10,0x08,0x20,0x04,0x40,0x04,0x00,0x00,/*"六",6*/
};
const unsigned char CH_qing PROGMEM[] = 
{
    0x00,0x20,0x00,0x20,0x7B,0xFE,0x48,0x20,0x49,0xFC,0x48,0x20,0x4B,0xFE,0x78,0x00,
0x49,0xFC,0x49,0x04,0x49,0xFC,0x49,0x04,0x79,0xFC,0x49,0x04,0x01,0x14,0x01,0x08,/*"晴",0*/
};
const unsigned char CH_yu PROGMEM[] = 
{
    0x00,0x00,0xFF,0xFE,0x01,0x00,0x01,0x00,0x01,0x00,0x7F,0xFC,0x41,0x04,0x41,0x04,
0x49,0x44,0x45,0x24,0x41,0x04,0x49,0x44,0x45,0x24,0x41,0x04,0x41,0x14,0x40,0x08,/*"雨",1*/
};
const unsigned char CH_wu2 PROGMEM[] = 
{
    0x3F,0xF8,0x01,0x00,0x7F,0xFE,0x41,0x02,0x9D,0x74,0x01,0x00,0x1D,0x70,0x04,0x00,
0x0F,0xE0,0x14,0x40,0x03,0x80,0x1C,0x70,0xE2,0x0E,0x0F,0xE0,0x04,0x20,0x18,0x60,/*"雾",2*/
};


//Part.2 字模结构体
struct CN_Character
{
  char  Index[4]; // 汉字内码索引,如"中",在UTF-8编码下，每个汉字占3个字节，第四个是结束符0
  const unsigned char* CH_Id;  // 点阵数据，存放内码后对应的点阵序列每个字需要32个字节的点阵序列
  unsigned char CH_width;    // 字体宽度
};

//定义结构数组
PROGMEM const CN_Character hanzi[] =
{
 {"天", CH_tian, 16}, {"气", CH_qi, 16},{"周", CH_zhou, 16},{"一", CH_yi, 16},{"二", CH_er, 16},
 {"三", CH_san, 16},{"四", CH_si, 16},{"五", CH_wu, 16},{"六", CH_liu, 16},{"晴", CH_qing, 16},
 {"雨", CH_yu, 16},{"雾", CH_wu2, 16}
};
